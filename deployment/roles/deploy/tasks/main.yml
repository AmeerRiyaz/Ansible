---

# Install dependencies and tools on the target system
# Import Tasks for the deployment role
 

    # Update the APT package cache and install necessary packages
    - name: Remove old Docker apt source files to avoid conflicts
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /etc/apt/sources.list.d/docker.list
        - /etc/apt/sources.list.d/docker.list.save
        - /etc/apt/sources.list.d/docker-ce.list
        - /etc/apt/sources.list.d/docker-ce.list.save
      become: yes
    - name: Update APT Package Cache
      become_user: root
      become: yes
      apt:
        update_cache: yes
      when: ansible_os_family == "Debian" and ansible_distribution_version is version('20.04', '>=')

    - name: Install APT Packages
      become: yes
      apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      loop:
        - curl
        - wget
        - unzip
        - vim
        - python3
        - python3-pip
        - python3-venv
        - python3-dev
        - python3-setuptools
        - python3-wheel
        - python3-apt
        - build-essential
        - libssl-dev
        - libffi-dev
        - libxml2-dev
        - libxslt1-dev
        - zlib1g-dev
        - libjpeg8-dev
        - libpq-dev
        - git
        - nodejs
        - npm
        - postgresql
        - postgresql-client
        - sqlite3
        - net-tools
        - htop
        - jq
        - cmake
        - pkg-config
        - g++
        - software-properties-common
        - httpie
        - netcat
        - telnet
        - ansible
        - make
        - tmux
        - sysstat
        - iotop
        - iftop
      when: ansible_os_family == "Debian" and ansible_distribution_version is version('20.04', '>=') and Installer
      register: install_pre_req
       
    - name: Install NVM (Node Version Manager)
      shell: |
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash
      args:
        executable: /bin/bash
      when: Installer

    - name: Install Docker
      import_tasks: docker.yml
      when: Installer

    - name: Verify All Installations
      ansible.builtin.command: "{{ item }}"
      loop:
        - "curl --version"
        - "wget --version"
        - "unzip -v"
        - "vim --version"
        - "python3 --version"
        - "pip3 --version"
        - "docker --version"
        - "docker-compose --version"
        - "git --version"
        - "node --version"
        - "npm --version"
        - "psql --version"
        - "sqlite3 --version"
        - "http --version"
        - "ansible --version"
        - "cmake --version"
        - "make --version"
        - "tmux -V"
      when: install_pre_req is changed
      register: verify_installations


    - name: Display Verification Results 
      debug:
        msg: "Verification of installations completed successfully."
      when: verify_installations is changed

# import tasks 
    - name: Import Copy Tasks
      import_tasks: copy.yml
      
   
    
    - name: Import Post-Installation Tasks
      import_tasks: deployer.yml
    
    
    - name: Start Deployment
      ansible.builtin.debug:
        msg: "Deployment started for {{ name }} version {{ version }} on {{ inventory_hostname }}"
      

    - name: Start the Scripts 
      import_tasks: runner.yml
    

    - name: Deployment Completed
      ansible.builtin.command: docker images 
      notify:
        - Verify-Deployment
      register: deployment_status
    
    - name: Display Deployment Status
      ansible.builtin.debug:
        msg: "Deployment Status: {{ deployment_status }}"

    - name: docker 
      ansible.builtin.command: docker ps -aq
      notify:
        - Check
      register: check_data
      
    - name: Final Debug Message
      ansible.builtin.debug:
        msg: "Playbook finished. Check above for handler execution {{check_data}}."

    
    